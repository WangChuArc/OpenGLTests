# version 430 core
in vec2 _fragCood;
in vec3 position;
//in vec3 normal;
out vec3 color;
uniform sampler2D sampler;
uniform vec3 lightDirect;
uniform vec3 ambient;
uniform vec3 diffuse;
uniform vec3 specular;
uniform float shininess;

void main()
{
    vec3 eye = normalize(position - vec3(0.0f));
    vec3 half_vec = normalize(vec3(0.0f) - eye - lightDirect);
    color = texture(sampler, _fragCood).rgb * ambient + vec3(1.0f) * diffuse * half_vec;
    //color = vec3(1.0f);
}