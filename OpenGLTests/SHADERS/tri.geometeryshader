# version 430 core
layout (triangles) in;
layout (triangle_strip, max_vertices = 3) out;
in vec2 fragCood[];
out vec2 _fragCood;
out vec3 position;
//out vec3 normal;
//out vec3 xAxis;
//out vec3 zAxis;
void main()
{
    //vec3 v1 = (gl_in[1].gl_Position - gl_in[0].gl_Position).xyz;
    //vec3 v2 = (gl_in[2].gl_Position - gl_in[0].gl_Position).xyz;
    //vec3 normal = normalize(cross(v1, v2));
    //normal = vec3(1.0f);

    gl_Position = gl_in[0].gl_Position;
    _fragCood = fragCood[0];
    position = gl_Position.xyz;
    EmitVertex();

    gl_Position = gl_in[1].gl_Position;
    _fragCood = fragCood[1];
    position = gl_Position.xyz;
    EmitVertex();

    gl_Position = gl_in[2].gl_Position;
    _fragCood = fragCood[2];
    position = gl_Position.xyz;
    EmitVertex();

    EndPrimitive();
}